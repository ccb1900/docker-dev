version: '3.1'
networks:
  default:
    external:
      name: dev
services:
  mysql:
    build: ./mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
    ports:
      - 3306:3306
  adminer:
    build: ./adminer
    restart: always
    links:
      - mysql
  redis:
    build: ./redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ${DATA_PATH}/redis:/data
      - ${LOG_PATH}/redis:/var/log/redis
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        compress: "true"
        max-file: "30"
  redis-adminer:
    build: ./redis-adminer
    restart: always
    environment:
      REDIS_1_HOST: redis
      REDIS_1_AUTH: test123
      REDIS_2_HOST: r-bp1cq7bgl0ddrjej86pd.redis.rds.aliyuncs.com
      REDIS_2_AUTH: pn_test:Pn123456
      REDIS_2_PORT: 6999
    links:
      - redis
  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes: 
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${WEB_PATH}:/var/www
    links:
      - redis-adminer
      - adminer
      - fpm
      - rancher
  fpm:
    build: ./php-fpm
    volumes:
      - ${WEB_PATH}:/var/www/html:cached
  cli:
    build: ./php-cli
    volumes:
      - ${WEB_PATH}:/var/www
    tty: true
  loki:
    build: ./loki
    ports:
      - 4100:4100
      - 3100:3100
  grafana:
    build: ./grafana
    ports:
      - 3000:3000
  prometheus:
    build: ./prometheus
    volumes:
      - ./prometheus/config:/etc/prometheus
    ports:
      - 9090:9090
  mongo:
    build: ./monogo
    restart: always
    volumes: 
      - ${DATA_PATH}/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 18181:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  theia:
    image: theiaide/theia
    ports:
      - 13000:3000
  php8:
    build: ./php8
    tty: true
    volumes:
      - ${WEB_PATH}:/var/www
  portainer:
    build: ./portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 19000:9000
  sonarqube:
    build: ./sonarqube
    ports:
      - 29000:9000
    environment:
      SONARQUBE_JDBC_USERNAME: postgres
      SONARQUBE_JDBC_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      SONARQUBE_JDBC_URL: jdbc:postgresql://postgres/sonarqube
    links:
      - postgres
  postgres:
    build: ./postgresql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
    ports:
      - 5432:5432
  elasticsearch:
    build: ./elasticsearch
    ports:
      - 9200:9200
    environment: 
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
  logstash: 
    build: ./logstash
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
    volumes: 
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    #   - ./logstash/config:/usr/share/logstash/config
  kibana:
    build: ./kibana
    ports: 
      - 5601:5601
  dejavu:
    image: appbaseio/dejavu
    ports: 
      - 1358:1358
  rancher:
    image: rancher/rancher
    privileged: true
    


